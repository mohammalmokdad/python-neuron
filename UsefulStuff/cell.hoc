create soma,dendrite
access soma
connect soma(1),dendrite(0)

diam=22
L=300
Ra=115
insert pas
e_pas=-70
g_pas=0.0048
cm=25

access dendrite
diam=22
L=1200
Ra=115
insert pas
insert L_Ca
insert kca2
gcabar_L_Ca=2e-4
e_pas=-70
g_pas=3.9e-5
cm=2.5

access soma

theta_m_L_Ca=-40
tau_m_L_Ca=40
celsius=37

//default spike conductances
insert na3rp
insert naps
insert kdrRL
insert mAHP
gbar_na3rp=0.2
gbar_naps=0.002
sh_na3rp=0
sh_naps=10
gMax_kdrRL=0.015
gcamax_mAHP = 8e-06
gkcamax_mAHP = 0.015
taur_mAHP=40
tmin_kdrRL = 0.8
taumax_kdrRL = 20
mVh_kdrRL = -21
mvhalfca_mAHP = -26

//code for making a current clamp biramp

/* makebiramp.hoc

   sets up a triangular waveform for use as a command potential

   assumes the following are known:

   dt		time step

*/



// Easy mnemonics so I can set these in the interpreter

// and then invoke simple() (just in case I forget the calling

// syntax for mkramp(), or maybe only want to change one param).

// My convention for constants is upper case

V0 = -80	// default for stdrun.hoc is -65 mV

SLOPE = 0.2	// mv/ms

TR = 10000	// ms





objref mycmd,mycmd1,mycmd2

mycmd = new Vector()	// must create object outside proc
mycmd1 = new Vector()	// must create object outside proc
mycmd2 = new Vector()	// must create object outside proc





/* Creates a "ramp" vector

      _____ v1

     /

    / slope

v0 /

    tr



 arguments:

   $1	v0	command at start of ramp	(mV)

   $2	slope	dv/dt during ramp			(mV/ms)

   $3	tr	duration of ramp			(ms)

		note 1: v1 = v0 + slope*tr

		note 2: at end of t0 + tr, vector.play will leave 

			command at v1, but if this is played into 

			dur2 of a SEClamp object, what really happens 

			will depend on whether t enters dur3

 */

// I double the initial letter so these local variables won't 

// collide with global names that I may want to use later

proc mkbiramp() { local ii, vv0, sslope, ttr, vv1

	vv0 = $1

	sslope = $2

	ttr = $3

	vv1 = vv0 + sslope*ttr/2

	mycmd1.indgen(vv0, vv1, dt*sslope)
	mycmd2.indgen(vv0,vv1,dt*sslope)
 mycmd2.reverse()
 mycmd.resize(0)
 mycmd.append(mycmd1,mycmd2)

}





// I can invoke mkbiramp() with all 3 arguments,

// or I can change a single "constant" (V0, SLOPE, or TR)

// and then invoke simple() with no arguments.

proc simple() {

	mkbiramp(V0, SLOPE, TR)

}

proc vsimple() {

	mkbiramp(vV0, vSLOPE, vTR)

}



objref elec
elec= new IClamp(0.5)
tempdur1 = 0	// for temporary storage of

tempamp1 = 0	// IClamp[0].dur and amp
V0=0
TR=10000
SLOPE=0.006


// invoke the following procedures as needed from the interpreter window



// to use the ramp to drive the SEClamp

proc rampon() {

	tempdur1 = IClamp[0].dur

	tempamp1 = IClamp[0].amp


	// make sure IClamp will follow the command throughout the simulation

IClamp[0].dur = TR

	mycmd.play(&IClamp[0].amp,dt)

	print "IClamp[0].amp is now driven by vector mycmd"
}





// to "disconnect" the ramp from the SEClamp

proc rampoff() {

	// restore IClamp[0].dur to previously saved value

	IClamp[0].dur = tempdur1

IClamp[0].amp = tempamp1

	mycmd.play_remove()

	print "IClamp[0].amp has been released from mycmd"

}
simple()


//code to set up spike counter
objref apc,spiketimes,spikeout
apc=new APCount(0.5)
spiketimes=new Vector()
spikeout=new File()
strdef filename


//Randy's notes (done above in this file): to save spike times, type following in Terminal window
//		apc.record(spiketimes)
//		sprint(filename,"FRramp.txt")
//		spikeout.wopen(filename)
//		spiketimes.printf(spikeout,"%8.4f\n")
//		spikeout.close()
//

soma.diam = 22
soma.L = 2419
soma.g_pas = 0.000125
soma.e_pas = -70
soma.gbar_na3rp = 0.05
soma.gbar_naps = 0.0005
soma.sh_na3rp = 12
soma.sh_naps = 22
soma.ar_na3rp = 0.4
soma.ar_naps = 0.4
soma.gMax_kdrRL = 0.03
soma.gcamax_mAHP = 8e-06
soma.gkcamax_mAHP = 0.0011
soma.taur_mAHP = 70
soma.ek = -80
soma.Ra = 13.711
soma.cm = 3.588
dendrite.L = 3381
dendrite.diam = 22
dendrite.g_pas = 0.000103
dendrite.e_pas = -70
dendrite.gcabar_L_Ca = 0.00013
dendrite.g_kca2 = 1.8e-05
dendrite.depth2_kca2 = 100
dendrite.taur2_kca2 = 200
dendrite.ek=-80
dendrite.Ra = 13.711
dendrite.cm = 1.036
qinf_na3rp = 8
thinf_na3rp = -50
vslope_naps = 6
mvhalfca_mAHP = -20
celsius = 37
theta_m_L_Ca = -42
tau_m_L_Ca = 40
V0 = -8
